[{"/Users/nikhilnair/Projects/blackjack/src/index.js":"1","/Users/nikhilnair/Projects/blackjack/src/components/Card.js":"2","/Users/nikhilnair/Projects/blackjack/src/components/App.js":"3","/Users/nikhilnair/Projects/blackjack/src/components/Controls.js":"4","/Users/nikhilnair/Projects/blackjack/src/components/Deck.js":"5","/Users/nikhilnair/Projects/blackjack/src/reducers/gameReducer.js":"6","/Users/nikhilnair/Projects/blackjack/src/actions/gameActions.js":"7","/Users/nikhilnair/Projects/blackjack/src/components/PlayingHand.js":"8","/Users/nikhilnair/Projects/blackjack/src/constants/gameConstants.js":"9","/Users/nikhilnair/Projects/blackjack/src/components/ResultModal.js":"10"},{"size":455,"mtime":1606528880510,"GameResults":"11","hashOfConfig":"12","results":"13"},{"size":328,"mtime":1606506357900,"results":"14","hashOfConfig":"12"},{"size":5700,"mtime":1606684172811,"results":"15","hashOfConfig":"12"},{"size":472,"mtime":1606531361711,"results":"16","hashOfConfig":"12"},{"size":1168,"mtime":1606527774427,"results":"17","hashOfConfig":"12"},{"size":1809,"mtime":1606531818323,"results":"18","hashOfConfig":"12"},{"size":461,"mtime":1606528880506,"results":"19","hashOfConfig":"12"},{"size":595,"mtime":1606530805004,"results":"20","hashOfConfig":"12"},{"size":644,"mtime":1606531818315,"results":"21","hashOfConfig":"12"},{"size":561,"mtime":1606531818309,"results":"22","hashOfConfig":"12"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xeag2q",{"filePath":"23","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nikhilnair/Projects/blackjack/src/index.js",[],[],"/Users/nikhilnair/Projects/blackjack/src/components/Card.js",[],"/Users/nikhilnair/Projects/blackjack/src/components/App.js",["46"],"/Users/nikhilnair/Projects/blackjack/src/components/Controls.js",[],"/Users/nikhilnair/Projects/blackjack/src/components/Deck.js",[],"/Users/nikhilnair/Projects/blackjack/src/reducers/gameReducer.js",["47"],"import {Game} from \"../constants/gameConstants\";\n\nexport const gameReducer = (state, action) => {\n    switch (action.type) {\n        // Setting data at the start of a new game\n        case 'startGame': {\n            return {\n                ...state,\n                playerHand: action.payload.playerHand,\n                dealerHand: action.payload.dealerHand,\n                playerScore: action.payload.playerScore,\n                dealerScore: action.payload.dealerScore,\n                gameState: Game.STARTED\n            }\n        }\n\n        // Update game state and display modal\n        case 'endGame': {\n            return {\n                ...state,\n                gameState: Game.END,\n                show: true,\n                message: action.payload\n            }\n        }\n\n        // Update state when a player \"hits\"\n        case 'updatePlayer': {\n            return {\n                ...state,\n                playerHand: action.payload.playerHand,\n                playerScore: action.payload.playerScore,\n            }\n        }\n        // Update state when dealer is drawing cards\n        case 'updateDealer': {\n            return {\n                ...state,\n                dealerHand: action.payload.dealerHand,\n                dealerScore: action.payload.dealerScore,\n            }\n        }\n        // Reset state to initial state\n        case 'reset': {\n            return {\n                ...state,\n                playerHand: [],\n                dealerHand: [],\n                playerScore: 0,\n                dealerScore: 0,\n                gameState: Game.INIT\n            }\n        }\n\n        // Close the modal\n        case 'closeModal': {\n            return {\n                ...state,\n                show: false,\n                message: ''\n            }\n        }\n    }\n}\n",["48","49"],"/Users/nikhilnair/Projects/blackjack/src/actions/gameActions.js",[],"/Users/nikhilnair/Projects/blackjack/src/components/PlayingHand.js",[],"/Users/nikhilnair/Projects/blackjack/src/constants/gameConstants.js",[],"/Users/nikhilnair/Projects/blackjack/src/components/ResultModal.js",[],{"ruleId":"50","severity":1,"message":"51","line":37,"column":8,"nodeType":"52","endLine":37,"endColumn":21,"suggestions":"53"},{"ruleId":"54","severity":1,"message":"55","line":4,"column":5,"nodeType":"56","messageId":"57","endLine":63,"endColumn":6},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dealerScore', 'endGame', and 'gameState'. Either include them or remove the dependency array.","ArrayExpression",["62"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-native-reassign",["63"],"no-negated-in-lhs",["64"],{"desc":"65","fix":"66"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [dealerScore, endGame, gameState, playerScore]",{"range":"67","text":"68"},[1419,1432],"[dealerScore, endGame, gameState, playerScore]"]